---
- name: Install Apt
  apt:
    name:
      - gnupg
      - wget
    state: present

- name: Add PostgreSQL APT repository key
  apt_key:
    url: "https://www.postgresql.org/media/keys/ACCC4CF8.asc"
    state: present

- name: Add PostgreSQL repository
  apt_repository:
    repo: "deb http://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main"
    state: present
    filename: postgresql

- name: Install PostgreSQL server and client
  apt:
    name:
      - "postgresql-{{ postgresql_version }}"
      - "postgresql-client-{{ postgresql_version }}"
      - "postgresql-contrib-{{ postgresql_version }}"
      - libpq-dev
      - python3-psycopg2
    state: present
    update_cache: yes

- name: Ensure PostgreSQL service is started and enabled
  systemd:
    name: "postgresql@{{ postgresql_version }}-main"
    state: started
    enabled: yes

- name: Create PostgreSQL databases
  postgresql_db:
    name: "{{ item.name }}"
    encoding: "{{ item.encoding | default('UTF8') }}"
    lc_collate: "{{ item.lc_collate | default('en_US.UTF-8') }}"
    lc_ctype: "{{ item.lc_ctype | default('en_US.UTF-8') }}"
  loop: "{{ postgresql_databases }}"
  become: yes
  become_user: postgres

- name: Create PostgreSQL users
  postgresql_user:
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    role_attr_flags: "{{ item.privileges | default('CREATEDB,LOGIN') }}"
  loop: "{{ postgresql_users }}"
  become: yes
  become_user: postgres

- name: Grant privileges to users for specific databases
  postgresql_privs:
    database: "{{ item.0.name }}"
    roles: "{{ item.1.name }}"
    privs: "{{ item.1.privileges | default('ALL') }}"
    type: table
  loop: "{{ postgresql_databases | product(postgresql_users) | list }}"
  when: 
    - item.1.databases is defined
    - item.0.name in item.1.databases
  become: yes
  become_user: postgres

- name: Configure PostgreSQL main configuration
  template:
    src: postgresql.conf.j2
    dest: "/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf"
    owner: postgres
    group: postgres
    mode: 0644
  notify: restart postgresql

- name: Configure PostgreSQL client authentication
  template:
    src: pg_hba.conf.j2
    dest: "/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf"
    owner: postgres
    group: postgres
    mode: 0640
  notify: restart postgresql

- name: Show PostgreSQL connection info
  debug:
    msg: |
      PostgreSQL installed and configured!
      Version: {{ postgresql_version }}
      Port: {{ postgresql_port }}
      Databases: {{ postgresql_databases | map(attribute='name') | list }}
      Users: {{ postgresql_users | map(attribute='name') | list }}
      Connect from cluster: psql -h {{ inventory_hostname }} -p {{ postgresql_port }} -U {{ postgresql_databases.name }} -d {{ postgresql_users.name }}