---
- name: Install HAProxy
  package:
    name: haproxy
    state: present
  when: ansible_os_family == "Debian" or ansible_os_family == "RedHat"

- name: Create HAProxy configuration directory
  file:
    path: "/etc/haproxy"
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Configure HAProxy
  template:
    src: haproxy.cfg.j2
    dest: "/etc/haproxy/haproxy.cfg"
    owner: root
    group: root
    mode: '0644'
  notify: restart haproxy

- name: Enable HAProxy
  lineinfile:
    path: /etc/default/haproxy
    regexp: '^ENABLED='
    line: 'ENABLED=1'
    state: present
  when: ansible_os_family == "Debian"

- name: Configure SELinux for HAProxy
  selinux_permissive:
    name: haproxy_t
    permissive: true
  when: ansible_os_family == "RedHat" and ansible_selinux.status == "enabled"

- name: Configure HAProxy logging
  block:
    - name: Configure HAProxy log in rsyslog
      lineinfile:
        path: /etc/rsyslog.conf
        line: '$ModLoad imudp\n$UDPServerRun {{ haproxy_syslog_port }}'
        state: present
      notify: restart rsyslog

    - name: Configure HAProxy logging rules
      copy:
        content: |
          local0.* -/var/log/haproxy.log
        dest: /etc/rsyslog.d/49-haproxy.conf
        owner: root
        group: root
        mode: '0644'
      notify: restart rsyslog

    - name: Create HAProxy log file
      file:
        path: /var/log/haproxy.log
        state: touch
        owner: syslog
        group: adm
        mode: '0644'
  when: haproxy_log_enabled

- name: Start and enable HAProxy
  systemd:
    name: haproxy
    state: started
    enabled: true
    daemon_reload: true

- name: Wait for HAProxy to start
  wait_for:
    port: "{{ haproxy_frontend_port }}"
    host: "{{ inventory_hostname }}"
    delay: 5
    timeout: 30
    state: started

- name: Wait for HAProxy stats
  wait_for:
    port: "{{ haproxy_stats_port }}"
    host: "{{ inventory_hostname }}"
    delay: 5
    timeout: 30
    state: started

- name: Test HAProxy stats page
  uri:
    url: "http://{{ inventory_hostname }}:{{ haproxy_stats_port }}/"
    method: GET
    user: "{{ haproxy_stats_user }}"
    password: "{{ haproxy_stats_password }}"
    force_basic_auth: true
    status_code: 200
    timeout: 10
  register: haproxy_test
  failed_when: haproxy_test.failed
  retries: 3
  delay: 5

- name: Check PostgreSQL backend status
  uri:
    url: "http://{{ inventory_hostname }}:{{ haproxy_stats_port }}/;csv"
    method: GET
    user: "{{ haproxy_stats_user }}"
    password: "{{ haproxy_stats_password }}"
    force_basic_auth: true
    timeout: 10
  register: haproxy_stats
  failed_when: false

- name: Display HAProxy status
  debug:
    msg: "HAProxy is running and configured. Stats available at http://{{ inventory_hostname }}:{{ haproxy_stats_port }}/"