---
- name: Check if Docker is installed
  ansible.builtin.package_facts:
    manager: auto
  register: pkg_info

- name: Create HAProxy directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  loop:
    - "{{ haproxy_config_dir }}"
    - "/etc/systemd/system"

- name: Create HAProxy configuration
  ansible.builtin.template:
    src: haproxy.cfg.j2
    dest: "{{ haproxy_config_dir }}/haproxy.cfg"
    owner: root
    group: root
    mode: '0644'
  notify: reload haproxy service

- name: Pull HAProxy Docker image
  ansible.builtin.shell:
    cmd: "docker pull {{ haproxy_docker_image }}:{{ haproxy_docker_tag }}"
  args:
    executable: /bin/bash
  register: pull_result
  changed_when: "'Downloaded newer image' in pull_result.stdout or 'Image is up to date' not in pull_result.stdout"

- name: Create HAProxy systemd service
  ansible.builtin.template:
    src: haproxy.service.j2
    dest: /etc/systemd/system/{{ haproxy_container_name }}.service
    owner: root
    group: root
    mode: '0644'
  notify: reload systemd

- name: Enable and start HAProxy service
  ansible.builtin.systemd:
    name: "{{ haproxy_container_name }}"
    state: started
    enabled: true
    daemon_reload: true

- name: Wait for HAProxy service to start
  ansible.builtin.wait_for:
    port: "{{ haproxy_stats_port }}"
    host: "{{ inventory_hostname }}"
    state: started
    timeout: 30

- name: Verify HAProxy stats endpoint
  ansible.builtin.uri:
    url: "http://{{ inventory_hostname }}:{{ haproxy_stats_port }}/"
    method: GET
    user: "{{ haproxy_stats_user }}"
    password: "{{ haproxy_stats_password }}"
    force_basic_auth: true
    status_code: 200
    timeout: 10
  register: haproxy_stats_test
  until: haproxy_stats_test.status == 200
  retries: 5
  delay: 5

- name: Get HAProxy service status
  ansible.builtin.systemd:
    name: "{{ haproxy_container_name }}"
  register: service_status

- name: Check HAProxy container status
  ansible.builtin.shell:
    cmd: "docker ps -f name={{ haproxy_container_name }} --format 'table {{.Names}}\t{{.Status}}'"
  register: container_info

- name: Display installation summary
  ansible.builtin.debug:
    msg: |
      HAProxy service successfully deployed!
      =====================================
      Service: {{ haproxy_container_name }}
      Image: {{ haproxy_docker_image }}:{{ haproxy_docker_tag }}
      Service Status: {{ service_status.state }}
      
      Access Points:
      - Read/Write: {{ inventory_hostname }}:{{ haproxy_frontend_port }}
      - Read-Only: {{ inventory_hostname }}:{{ haproxy_readonly_port }} 
      - Sticky Sessions: {{ inventory_hostname }}:{{ haproxy_sticky_port }}
      - Statistics: http://{{ inventory_hostname }}:{{ haproxy_stats_port }}/
      
      Management commands:
      - View logs: journalctl -u {{ haproxy_container_name }} -f
      - Restart: systemctl restart {{ haproxy_container_name }}
      - Status: systemctl status {{ haproxy_container_name }}