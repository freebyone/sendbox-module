- name: Install PgBouncer
  package:
    name: pgbouncer
    state: present

- name: Create PgBouncer user
  user:
    name: pgbouncer
    system: true
    shell: /bin/false
    home: /var/lib/pgbouncer

- name: Create configuration directories
  file:
    path: "{{ item }}"
    state: directory
    owner: pgbouncer
    group: pgbouncer
    mode: '0755'
  loop:
    - "/etc/pgbouncer"
    - "/var/log/pgbouncer"
    - "/var/run/pgbouncer"

- name: Configure PgBouncer
  template:
    src: pgbouncer.ini.j2
    dest: "/etc/pgbouncer/pgbouncer.ini"
    owner: pgbouncer
    group: pgbouncer
    mode: '0640'
  notify: reload pgbouncer

- name: Create PgBouncer HBA configuration
  template:
    src: pgb_hba.conf.j2
    dest: "/etc/pgbouncer/pgb_hba.conf"
    owner: pgbouncer
    group: pgbouncer
    mode: '0640'
  notify: reload pgbouncer

- name: Create userlist file
  template:
    src: userlist.txt.j2
    dest: "/etc/pgbouncer/userlist.txt"
    owner: pgbouncer
    group: pgbouncer
    mode: '0640'
  when: pgbouncer_users is defined
  notify: reload pgbouncer

- name: Create default userlist if not defined
  copy:
    content: "# PgBouncer userlist\n\"postgres\" \"md5{{ postgres_superuser_password | default('changeme') | password_hash('md5') }}\""
    dest: "/etc/pgbouncer/userlist.txt"
    owner: pgbouncer
    group: pgbouncer
    mode: '0640'
  when: pgbouncer_users is not defined
  notify: reload pgbouncer

- name: Create PgBouncer log directory
  file:
    path: "/var/log/pgbouncer"
    state: directory
    owner: pgbouncer
    group: pgbouncer
    mode: '0755'

- name: Configure PgBouncer systemd service
  template:
    src: pgbouncer.service.j2
    dest: /etc/systemd/system/pgbouncer.service
    owner: root
    group: root
    mode: '0644'

- name: Start and enable PgBouncer
  systemd:
    name: pgbouncer
    state: started
    enabled: true
    daemon_reload: true

- name: Wait for PgBouncer to start
  wait_for:
    port: "{{ pgbouncer_port }}"
    host: "{{ inventory_hostname }}"
    delay: 5
    state: started
  retries: 10

- name: Test PgBouncer connection
  postgresql_query:
    query: "SELECT 1"
    login_host: "{{ inventory_hostname }}"
    login_port: "{{ pgbouncer_port }}"
    login_user: "postgres"
    login_password: "{{ postgres_superuser_password | default('changeme') }}"
  register: pgbouncer_test
  failed_when: pgbouncer_test.failed
  changed_when: false